<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>donz0r's blog - python</title><link>http://derdon.github.io/blog/</link><description></description><lastBuildDate>Fri, 31 May 2013 00:00:00 +0200</lastBuildDate><item><title>Implementing an undo-redo-manager in Python</title><link>http://derdon.github.io/blog/implementing-an-undo-redo-manager-in-python.html</link><description>&lt;p class="first last"&gt;This post explains one way of implementing a class that is able
to undo and redo each called command. The explained technique
will be used in my GSOC project, but I will describe it here in
a general way so that it can be adapted to your needs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Liedtke</dc:creator><pubDate>Fri, 31 May 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:derdon.github.io,2013-05-31:/blog/implementing-an-undo-redo-manager-in-python.html</guid></item><item><title>using a custom pygments style via vim color schemes</title><link>http://derdon.github.io/blog/using-a-custom-pygments-style-via-vim-color-schemes.html</link><description>&lt;p class="first last"&gt;Vim color schemes define how syntax highlighting is done when
editing files in (g)vim. This article explains how to use such a vim color
scheme for code blocks in articles which use the library &lt;a class="reference external" href="http://pygments.pocoo.org"&gt;pygments&lt;/a&gt; to
highlight code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Liedtke</dc:creator><pubDate>Mon, 16 May 2011 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:derdon.github.io,2011-05-16:/blog/using-a-custom-pygments-style-via-vim-color-schemes.html</guid></item></channel></rss>